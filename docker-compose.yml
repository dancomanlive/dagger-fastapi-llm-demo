services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - dagger-socket:/run/dagger
      - /var/run/docker.sock:/var/run/docker.sock
    command: uvicorn rag_app:app --host 0.0.0.0 --reload
    ports:
      - "8000:8000"
    environment:
      - DAGGER_HOST=unix:///run/dagger/engine.sock
      - _EXPERIMENTAL_DAGGER_RUNNER_HOST=unix:///run/dagger/engine.sock
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_URL_FOR_DAGGER=http://host.docker.internal:6333
      - PYTHONPATH=/app
      - RETRIEVER_SERVICE_URL=http://retriever-service:8000 # For container-to-container
      - RETRIEVER_SERVICE_URL_FOR_HOST=http://localhost:8001 # For host access
      - RETRIEVER_SERVICE_URL_FOR_DAGGER=http://host.docker.internal:8001 # For Dagger containers
    env_file:
      - .env
    depends_on:
      - dagger-engine
      - qdrant
      - retriever-service
    networks:
      - dagger-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/"]
      interval: 10s
      timeout: 5s
      retries: 3

  dagger-engine:
    image: registry.dagger.io/engine:v0.18.8
    container_name: dagger-engine
    privileged: true
    volumes:
      - dagger-socket:/run/dagger
    networks:
      - dagger-net

  retriever-service:
    build:
      context: ./modules/retriever_service
      args:
        EMBEDDING_MODEL_ARG: "sentence-transformers/all-MiniLM-L6-v2"
    ports:
      - "8001:8000" # Expose on host port 8001
    environment:
      - QDRANT_HOST_FOR_SERVICE=http://qdrant:6333 # Service discovery within Docker Compose
      - QDRANT_API_KEY=${QDRANT_API_KEY:-} # Get from .env or empty if not set
    depends_on:
      - qdrant
    restart: unless-stopped
    networks:
      - dagger-net

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - dagger-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3


volumes:
  dagger-socket:
  qdrant-data:

networks:
  dagger-net:
    driver: bridge